// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigraineBlog;

namespace MigraineBlog.Migrations
{
    [DbContext(typeof(MigraineContext))]
    [Migration("20200301162748_TestingTagIdInPostModelForSelectTag")]
    partial class TestingTagIdInPostModelForSelectTag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MigraineBlog.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a place where you can share your own stories relating to your migraines. It would help users to keep content related to your migraines/headaches and how they impact your life.",
                            Name = "Personal Stories"
                        },
                        new
                        {
                            Id = 2,
                            Description = "If you have a medically sensitive question relating to your migraine/headache conditions or medication, write a post about it here! A vetted team of doctors will read them and give advice.",
                            Name = "Ask a Doctor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "If you have any tips for other migraineurs concerning avoidance methods, triggers or over-the-counter relief techniques, post about it here!",
                            Name = "Tips & Tricks"
                        });
                });

            modelBuilder.Entity("MigraineBlog.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("TagId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TagId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Dan",
                            Body = "I had a migraine over the weekend, and it totally ended my day. I had to close all the blinds in the house, sit in my bed with no sounds around and lie there. Nothing's worse than having a migraine on your day off and you can't even enjoy it...",
                            CategoryId = 1,
                            Title = "Day Over"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Rhianna",
                            Body = "Hi. I have been suffering from what I THOUGHT were just regular old headaches, until I met someone who suffers from chronic migraines. Only then did I realize what I may be suffering from are actually migraines! Unfortunately, without having health insurance right now, I cannot afford the pricey trip to a doctor for an official diagnosis. I have been taking the advice of my migraine-having friends on how to identify my triggers and the best at-home solutions. It's not ideal, but it's the best I can do for now! Hang in there, everyone!  ",
                            CategoryId = 1,
                            Title = "Unofficial Diagnosis"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Joan",
                            Body = "I have taken four ibuprofen which are all 400mg each. Can I take more? Please? My migraine will not cease. SOS.",
                            CategoryId = 2,
                            Title = "Is This Okay?"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Rebecca",
                            Body = "I am a 30 year old female, and I received my official diagnosis for migraines 5 years ago. My husband and I would like to have children, but I am worried I will pass this cursed gene onto my kids. Should I be worried?",
                            CategoryId = 2,
                            Title = "Are Migraines Genetic?"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Jefferson",
                            Body = "I find that the best way to kill a migraine (or at least avoid the suffering!) is by... simply taking a nice long nap in a dark quiet place. Works like a charm!",
                            CategoryId = 3,
                            Title = "When In Doubt, Sleep It Out!"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Coral",
                            Body = "Make sure to always get enough sleep, at least 8 hours per night. Drink enough water! Avoid loud sounds. Stay off screens for extended periods of time. If you start to feel the ol' familiar ache behind your eyes, try a temperature sleeping-mask! You can heat them up in the microwave OR stick them in the freezer and rest them over your eyes. Hope these help!",
                            CategoryId = 3,
                            Title = "Everyday Helpful Tips"
                        });
                });

            modelBuilder.Entity("MigraineBlog.Models.PostTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            TagId = 2
                        },
                        new
                        {
                            Id = 2,
                            PostId = 1,
                            TagId = 4
                        },
                        new
                        {
                            Id = 3,
                            PostId = 2,
                            TagId = 5
                        },
                        new
                        {
                            Id = 4,
                            PostId = 4,
                            TagId = 2
                        },
                        new
                        {
                            Id = 5,
                            PostId = 4,
                            TagId = 5
                        },
                        new
                        {
                            Id = 6,
                            PostId = 3,
                            TagId = 2
                        },
                        new
                        {
                            Id = 7,
                            PostId = 3,
                            TagId = 1
                        },
                        new
                        {
                            Id = 8,
                            PostId = 5,
                            TagId = 4
                        },
                        new
                        {
                            Id = 9,
                            PostId = 5,
                            TagId = 5
                        },
                        new
                        {
                            Id = 10,
                            PostId = 6,
                            TagId = 5
                        },
                        new
                        {
                            Id = 11,
                            PostId = 6,
                            TagId = 2
                        },
                        new
                        {
                            Id = 12,
                            PostId = 6,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("MigraineBlog.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "#BadDay"
                        },
                        new
                        {
                            Id = 2,
                            Name = "#SOS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "#Relief"
                        },
                        new
                        {
                            Id = 4,
                            Name = "#Triggers"
                        },
                        new
                        {
                            Id = 5,
                            Name = "#Advice"
                        });
                });

            modelBuilder.Entity("MigraineBlog.Models.Post", b =>
                {
                    b.HasOne("MigraineBlog.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MigraineBlog.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("MigraineBlog.Models.PostTag", b =>
                {
                    b.HasOne("MigraineBlog.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MigraineBlog.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
